buildscript {
    ext {
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${dependencyManagementVersion}"
        classpath "org.liquibase:liquibase-gradle-plugin:${liquibaseGradlePluginVersion}"
        classpath "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
        classpath "org.mariadb.jdbc:mariadb-java-client:${mariadbClientVersion}"
    }
	repositories {
		mavenCentral()
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.liquibase.gradle'

group = 'mpinard'
version = '0.1.0-SNAPSHOT'

// dbUser / dbPassword should be defined in ~/.gradle/gradle.properties
liquibase {
    activities {
        main {
            changelogFile 'data/planes/changelog/db-changelog-master.xml'
            url "jdbc:mariadb://localhost:3306/planes?createDatabaseIfNotExist=true"
            username dbUser
            password dbPassword
            logLevel "INFO"
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_23
    targetCompatibility = JavaVersion.VERSION_23
}

configurations {
    compile.exclude module: "slf4j-log4j12"
    compile.exclude module: "log4j"
    mockitoAgent
}

repositories {
	mavenCentral()
}

test {
    useJUnitPlatform()
}

dependencies {
    mockitoAgent(testImplementation("org.mockito:mockito-core:${mockitoVersion}")) {
        transitive = false
    }

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation("org.springframework.boot:spring-boot-starter-jdbc")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation("com.google.guava:guava:${guavaVersion}")
    implementation("com.github.f4b6a3:uuid-creator:${uuidCreatorVersion}")

    liquibaseRuntime("org.liquibase:liquibase-core:${liquibaseCoreVersion}")
    liquibaseRuntime("org.mariadb.jdbc:mariadb-java-client:${mariadbClientVersion}")
    liquibaseRuntime("ch.qos.logback:logback-classic:${logbackVersion}")
    liquibaseRuntime("info.picocli:picocli:${picocliVersion}")

    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation("org.assertj:assertj-core:${assertjVersion}")
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '--enable-preview'
}

tasks.withType(Test) {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaExec) {
    jvmArgs += '--enable-preview'
}

tasks {
    test {
        jvmArgs += "-javaagent:${configurations.mockitoAgent.asPath}"
    }
}